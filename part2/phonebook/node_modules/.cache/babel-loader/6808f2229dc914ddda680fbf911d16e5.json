{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lap13366-local/Documents/self-learning/FullStackOpen2020/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport personService from './services/person';\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewPhone] = useState('');\n  const [searchName, setSearchName] = useState('');\n  const [notification, setNotification] = useState({\n    message: null,\n    isSuccess: false\n  });\n  useEffect(() => {\n    personService.getAll().then(persons => setPersons(persons));\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const filterPerson = persons.filter(person => person.name === newName);\n\n    if (filterPerson.length === 0) {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(personObject).then(personObject => {\n        setPersons(persons.concat(personObject));\n        setNotification({\n          message: `Added ${newName}`,\n          isSuccess: true\n        });\n      });\n      setTimeout(() => setNotification({\n        message: null,\n        isSuccess: false\n      }), 5000);\n    } else if (window.confirm(`${newName} is already added to phonebook, replace a old number with a new one?`)) {\n      const changedPerson = { ...filterPerson[0],\n        number: newNumber\n      };\n      console.log('changedPerson', changedPerson);\n      personService.update(changedPerson.id, changedPerson).then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson));\n        setNotification({\n          message: `Updated ${newName}`,\n          isSuccess: true\n        });\n      }).catch(error => {\n        setNotification({\n          message: `Information of ${newName} has already been removed from server`,\n          isSuccess: false\n        });\n        setPersons(persons.filter(person => person.name !== newName));\n        console.log(error);\n      });\n      setTimeout(() => setNotification({\n        message: null,\n        isSuccess: false\n      }), 5000);\n    }\n\n    setNewName('');\n    setNewPhone('');\n  };\n\n  const deletePerson = person => {\n    console.log(person.name);\n    if (window.confirm(`Do you really want to delete ${person.name}`)) personService.remove(person.id).then(result => {\n      setPersons(persons.filter(p => p.id != person.id));\n      setNotification({\n        message: `Removed ${person.name}`,\n        isSuccess: true\n      });\n    });\n  };\n\n  const handlePersonChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    setNewPhone(event.target.value);\n  };\n\n  const handleSearchName = event => {\n    setSearchName(event.target.value);\n  };\n\n  const searchPersons = searchName === '' ? persons : persons.filter(person => person.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      message: notification.message,\n      isSuccess: notification.isSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search phone number by name (insensitive)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      searchName: searchName,\n      handleSearchName: handleSearchName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      addPerson: addPerson,\n      newName: newName,\n      newNumber: newNumber,\n      handlePersonChange: handlePersonChange,\n      handlePhoneChange: handlePhoneChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      searchPersons: searchPersons,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"l6D2SUBizjUictVm2TgwJQGi7o4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lap13366-local/Documents/self-learning/FullStackOpen2020/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","personService","Persons","Filter","PersonForm","Notification","App","persons","setPersons","newName","setNewName","newNumber","setNewPhone","searchName","setSearchName","notification","setNotification","message","isSuccess","getAll","then","addPerson","event","preventDefault","filterPerson","filter","person","name","length","personObject","number","create","concat","setTimeout","window","confirm","changedPerson","console","log","update","id","returnedPerson","map","catch","error","deletePerson","remove","result","p","handlePersonChange","target","value","handlePhoneChange","handleSearchName","searchPersons","toLocaleLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport './index.css'\nimport personService from './services/person'\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\"\nimport Notification from \"./components/Notification\"\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewPhone ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n  const [notification, setNotification] = useState({message: null, isSuccess: false})\n\n  useEffect(() =>{\n      personService\n          .getAll()\n          .then(persons => setPersons(persons))\n  }, [])\n\n  const addPerson = (event) => {\n      event.preventDefault()\n      const filterPerson = persons.filter(person => person.name === newName)\n      if (filterPerson.length === 0){\n          const personObject = {\n              name: newName,\n              number: newNumber\n          }\n          personService\n              .create(personObject)\n              .then(personObject => {\n                  setPersons(persons.concat(personObject))\n                  setNotification({\n                      message: `Added ${newName}`,\n                      isSuccess: true})\n                  }\n              )\n          setTimeout(() => setNotification({\n              message: null,\n              isSuccess: false\n          }), 5000)\n      }\n      else\n          if(window.confirm(`${newName} is already added to phonebook, replace a old number with a new one?`)) {\n              const changedPerson = {...filterPerson[0], number: newNumber}\n              console.log('changedPerson', changedPerson)\n              personService\n                  .update(changedPerson.id, changedPerson)\n                  .then(returnedPerson => {\n                      setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n                      setNotification({\n                          message: `Updated ${newName}`,\n                          isSuccess: true\n                      })\n                  })\n                  .catch(error => {\n                      setNotification({\n                          message: `Information of ${newName} has already been removed from server`,\n                          isSuccess: false\n                      })\n                      setPersons(persons.filter(person => person.name !== newName))\n                      console.log(error)\n                  })\n              setTimeout(() => setNotification({\n                  message: null,\n                  isSuccess: false\n              }), 5000)\n          }\n      setNewName('')\n      setNewPhone('')\n    }\n\n  const deletePerson = (person) => {\n        console.log(person.name)\n        if (window.confirm(`Do you really want to delete ${person.name}`))\n            personService\n                .remove(person.id)\n                .then((result) => {\n                    setPersons(persons.filter(p => p.id != person.id))\n                    setNotification({\n                         message: `Removed ${person.name}`,\n                         isSuccess: true\n                     })\n                })\n    }\n\n  const handlePersonChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n      setNewPhone(event.target.value)\n  }\n\n  const handleSearchName = (event) => {\n      setSearchName(event.target.value)\n  }\n\n  const searchPersons = searchName === ''\n      ? persons\n      : persons.filter(person => person.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase()))\n\n  return (\n    <div>\n      <Notification message={notification.message} isSuccess={notification.isSuccess}/>\n      <h2>Search phone number by name (insensitive)</h2>\n      <Filter searchName={searchName} handleSearchName={handleSearchName}/>\n      <h2>Phonebook</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handlePersonChange={handlePersonChange} handlePhoneChange={handlePhoneChange}/>\n      <h2>Numbers</h2>\n      <Persons searchPersons={searchPersons} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}