{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lap13366-local/Documents/self-learning/FullStackOpen2020/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport personService from './services/person';\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewPhone] = useState('');\n  const [searchName, setSearchName] = useState('');\n  useEffect(() => {\n    personService.getAll().then(persons => setPersons(persons));\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const filterPerson = persons.filter(person => person.name === newName);\n\n    if (filterPerson.length === 0) {\n      let id = persons.length + 1;\n\n      while (persons.filter(person => person.id === id).length > 0) id = id + 1;\n\n      const personObject = {\n        name: newName,\n        number: newNumber,\n        id: id\n      };\n      personService.create(personObject).then(personObject => setPersons(persons.concat(personObject)));\n    } else if (window.confirm(`${newName} is already added to phonebook, replace a old number with a new one?`)) {\n      const changedPerson = { ...filterPerson,\n        number: newNumber\n      };\n      personService.update(filterPerson.id, changedPerson).then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== filterPerson.id ? person : returnedPerson));\n      });\n    }\n\n    setNewName('');\n    setNewPhone('');\n  };\n\n  const deletePerson = person => {\n    console.log(person.name);\n    if (window.confirm(`Do you really want to delete ${person.name}`)) personService.remove(person.id).then(() => setPersons(persons.filter(p => p.id != person.id)));\n  };\n\n  const handlePersonChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    setNewPhone(event.target.value);\n  };\n\n  const handleSearchName = event => {\n    setSearchName(event.target.value);\n  };\n\n  const searchPersons = searchName === '' ? persons : persons.filter(person => person.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search phone number by name (insensitive)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      searchName: searchName,\n      handleSearchName: handleSearchName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      addPerson: addPerson,\n      newName: newName,\n      newNumber: newNumber,\n      handlePersonChange: handlePersonChange,\n      handlePhoneChange: handlePhoneChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      searchPersons: searchPersons,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"irvI49kLQqSYrBhxqmTT42Yp1Kw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lap13366-local/Documents/self-learning/FullStackOpen2020/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","personService","Persons","Filter","PersonForm","App","persons","setPersons","newName","setNewName","newNumber","setNewPhone","searchName","setSearchName","getAll","then","addPerson","event","preventDefault","filterPerson","filter","person","name","length","id","personObject","number","create","concat","window","confirm","changedPerson","update","returnedPerson","map","deletePerson","console","log","remove","p","handlePersonChange","target","value","handlePhoneChange","handleSearchName","searchPersons","toLocaleLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport personService from './services/person'\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\"\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewPhone ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n\n  useEffect(() =>{\n      personService\n          .getAll()\n          .then(persons => setPersons(persons))\n  }, [])\n\n  const addPerson = (event) => {\n      event.preventDefault()\n      const filterPerson = persons.filter(person => person.name === newName)\n      if (filterPerson.length === 0){\n          let id = persons.length + 1\n          while (persons.filter(person => person.id === id).length > 0)\n              id = id + 1\n          const personObject = {\n              name: newName,\n              number: newNumber,\n              id: id\n          }\n          personService\n              .create(personObject)\n              .then(personObject => setPersons(persons.concat(personObject)))\n      }\n      else\n          if(window.confirm(`${newName} is already added to phonebook, replace a old number with a new one?`)) {\n              const changedPerson = {...filterPerson, number: newNumber}\n              personService\n                  .update(filterPerson.id, changedPerson)\n                  .then(returnedPerson => {setPersons(persons.map(person => person.id !== filterPerson.id ? person : returnedPerson))})\n          }\n      setNewName('')\n      setNewPhone('')\n    }\n\n  const deletePerson = (person) => {\n        console.log(person.name)\n        if (window.confirm(`Do you really want to delete ${person.name}`))\n            personService\n                .remove(person.id)\n                .then(() => setPersons(persons.filter(p => p.id != person.id)))\n    }\n\n  const handlePersonChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n      setNewPhone(event.target.value)\n  }\n\n  const handleSearchName = (event) => {\n      setSearchName(event.target.value)\n  }\n\n  const searchPersons = searchName === ''\n      ? persons\n      : persons.filter(person => person.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase()))\n\n  return (\n    <div>\n      <h2>Search phone number by name (insensitive)</h2>\n      <Filter searchName={searchName} handleSearchName={handleSearchName} />\n      <h2>Phonebook</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handlePersonChange={handlePersonChange} handlePhoneChange={handlePhoneChange}/>\n      <h2>Numbers</h2>\n      <Persons searchPersons={searchPersons} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}