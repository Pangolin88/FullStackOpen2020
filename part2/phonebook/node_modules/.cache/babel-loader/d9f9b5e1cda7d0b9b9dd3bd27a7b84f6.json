{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lap13366-local/Documents/self-learning/FullStackOpen2020/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\n\nconst App = () => {\n  _s();\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/notes').then(reponse => {});\n  });\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewPhone] = useState('');\n  const [searchName, setSearchName] = useState('');\n\n  const addPerson = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1\n    };\n    const personName = persons.map(person => person.name);\n    const pos = personName.indexOf(newName);\n    console.log(pos);\n\n    if (pos === -1) {\n      setPersons(persons.concat(personObject));\n    } else window.alert(`${newName} is already added to phonebook`);\n\n    setNewName('');\n    setNewPhone('');\n  };\n\n  const handlePersonChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    setNewPhone(event.target.value);\n  };\n\n  const handleSearchName = event => {\n    setSearchName(event.target.value);\n  };\n\n  const searchPersons = searchName === '' ? persons : persons.filter(person => person.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search phone number by name (insensitive)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      searchName: searchName,\n      handleSearchName: handleSearchName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      addPerson: addPerson,\n      newName: newName,\n      newNumber: newNumber,\n      handlePersonChange: handlePersonChange,\n      handlePhoneChange: handlePhoneChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      searchPersons: searchPersons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"QprAFWXX7FIG4keDJlIU3U6M6G0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lap13366-local/Documents/self-learning/FullStackOpen2020/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","axios","Persons","Filter","PersonForm","App","get","then","reponse","persons","setPersons","name","number","newName","setNewName","newNumber","setNewPhone","searchName","setSearchName","addPerson","event","preventDefault","personObject","id","length","personName","map","person","pos","indexOf","console","log","concat","window","alert","handlePersonChange","target","value","handlePhoneChange","handleSearchName","searchPersons","filter","toLocaleLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport axios from 'axios'\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\"\n\nconst App = () => {\n  useEffect(() =>{\n      axios\n          .get('http://localhost:3001/notes')\n          .then(reponse => {\n              \n          })\n  })\n  const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas', number: '040-123456' },\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\n    { name: 'Dan Abramov', number: '12-43-234345' },\n    { name: 'Mary Poppendieck', number: '39-23-6423122' }\n  ])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewPhone ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n\n\n  const addPerson = (event) => {\n      event.preventDefault()\n      const personObject = {\n          name: newName,\n          number: newNumber,\n          id: persons.length + 1,\n      }\n      const personName = persons.map(person => person.name)\n      const pos = personName.indexOf(newName)\n      console.log(pos)\n      if (pos === -1) {\n          setPersons(persons.concat(personObject))\n      }\n      else\n          window.alert(`${newName} is already added to phonebook`)\n      setNewName('')\n      setNewPhone('')\n    }\n\n  const handlePersonChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n      setNewPhone(event.target.value)\n  }\n\n  const handleSearchName = (event) => {\n      setSearchName(event.target.value)\n  }\n\n  const searchPersons = searchName === ''\n      ? persons\n      : persons.filter(person => person.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase()))\n\n  return (\n    <div>\n      <h2>Search phone number by name (insensitive)</h2>\n      <Filter searchName={searchName} handleSearchName={handleSearchName} />\n      <h2>Phonebook</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handlePersonChange={handlePersonChange} handlePhoneChange={handlePhoneChange}/>\n      <h2>Numbers</h2>\n      <Persons searchPersons={searchPersons}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}