{"version":3,"sources":["services/person.js","components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","Persons","searchPersons","deletePerson","map","person","name","number","onClick","Filter","searchName","handleSearchName","value","onChange","PersonForm","addPerson","newName","newNumber","handlePersonChange","handlePhoneChange","onSubmit","type","Notification","message","isSuccess","className","App","useState","persons","setPersons","setNewName","setNewPhone","setSearchName","notification","setNotification","useEffect","personService","filter","toLocaleLowerCase","includes","event","target","preventDefault","personObject","console","log","concat","catch","error","setTimeout","window","confirm","result","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0a00905.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response =>  response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n\n}\nexport default {getAll, create, update, remove}","import React from 'react'\n\nconst Persons = ({ searchPersons, deletePerson}) => {\n    return(\n        <div>\n        <ul>\n            {searchPersons.map((person, id) => <li key = {id}>\n                {person.name} {person.number}\n                <button onClick={() => deletePerson(person)}>delete</button>\n            </li>)}\n        </ul>\n       </div>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({ searchName, handleSearchName }) => {\n    return(\n        <form>\n          <div>\n              filter name with <input value={searchName} onChange={handleSearchName}/>\n          </div>\n      </form>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, newNumber, handlePersonChange, handlePhoneChange }) => {\n    return(\n        <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handlePersonChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handlePhoneChange}/>\n        </div>\n\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message, isSuccess }) => {\n  if (message === null) {\n    return null\n  }\n  if (isSuccess)\n    return (\n      <div className='success'>\n        {message}\n      </div>\n    )\n  else\n    return (\n      <div className='error'>\n        {message}\n      </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect} from 'react'\nimport './index.css'\nimport personService from './services/person'\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\"\nimport Notification from \"./components/Notification\"\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewPhone ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n  const [notification, setNotification] = useState({message: null, isSuccess: false})\n\n  useEffect(() =>{\n      personService\n          .getAll()\n          .then(persons => setPersons(persons))\n  }, [])\n\n  const addPerson = (event) => {\n      event.preventDefault()\n      const personObject = {\n              name: newName,\n              number: newNumber\n          }\n          console.log(personObject)\n          personService\n              .create(personObject)\n              .then(personObject => {\n                  setPersons(persons.concat(personObject))\n                  setNotification({\n                      message: `Added ${newName}`,\n                      isSuccess: true})\n                  }\n              ).catch(error => {\n                  console.log(error.response.data)\n                  setNotification({\n                      message: error.response.data.error,\n                      isSuccess: false\n                  })\n          })\n          setTimeout(() => setNotification({\n              message: null,\n              isSuccess: false\n          }), 2000)\n      // const filterPerson = persons.filter(person => person.name === newName)\n      // if (filterPerson.length === 0){\n      //\n      // }\n      // else\n      //     if(window.confirm(`${newName} is already added to phonebook, replace a old number with a new one?`)) {\n      //         const changedPerson = {...filterPerson[0], number: newNumber}\n      //         console.log('changedPerson', changedPerson)\n      //         personService\n      //             .update(changedPerson.id, changedPerson)\n      //             .then(returnedPerson => {\n      //                 setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n      //                 setNotification({\n      //                     message: `Updated ${newName}`,\n      //                     isSuccess: true\n      //                 })\n      //             })\n      //             .catch(error => {\n      //                 setNotification({\n      //                     message: `Information of ${newName} has already been removed from server`,\n      //                     isSuccess: false\n      //                 })\n      //                 setPersons(persons.filter(person => person.name !== newName))\n      //                 console.log(error)\n      //             })\n      //         setTimeout(() => setNotification({\n      //             message: null,\n      //             isSuccess: false\n      //         }), 2000)\n      //     }\n      setNewName('')\n      setNewPhone('')\n    }\n\n  const deletePerson = (person) => {\n        console.log(person.name)\n        if (window.confirm(`Do you really want to delete ${person.name}`))\n            personService\n                .remove(person.id)\n                .then((result) => {\n                    setPersons(persons.filter(p => p.id !== person.id))\n                    setNotification({\n                         message: `Removed ${person.name}`,\n                         isSuccess: true\n                     })\n                })\n    }\n\n  const handlePersonChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n      setNewPhone(event.target.value)\n  }\n\n  const handleSearchName = (event) => {\n      setSearchName(event.target.value)\n  }\n\n  const searchPersons = searchName === ''\n      ? persons\n      : persons.filter(person => person.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase()))\n\n  return (\n    <div>\n      <Notification message={notification.message} isSuccess={notification.isSuccess}/>\n      <h2>Search phone number by name (insensitive)</h2>\n      <Filter searchName={searchName} handleSearchName={handleSearchName}/>\n      <h2>Phonebook</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handlePersonChange={handlePersonChange} handlePhoneChange={handlePhoneChange}/>\n      <h2>Numbers</h2>\n      <Persons searchPersons={searchPersons} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}