{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/lap13366-local/Documents/self-learning/FullStackOpen2020/part2/phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./index.css';import personService from'./services/person';import Persons from\"./components/Persons\";import Filter from\"./components/Filter\";import PersonForm from\"./components/PersonForm\";import Notification from\"./components/Notification\";var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),persons=_useState2[0],setPersons=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newNumber=_useState6[0],setNewPhone=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),searchName=_useState8[0],setSearchName=_useState8[1];var _useState9=useState({message:null,isSuccess:false}),_useState10=_slicedToArray(_useState9,2),notification=_useState10[0],setNotification=_useState10[1];useEffect(function(){personService.getAll().then(function(persons){return setPersons(persons);});},[]);var addPerson=function addPerson(event){event.preventDefault();var personObject={name:newName,number:newNumber};console.log(personObject);personService.create(personObject).then(function(personObject){setPersons(persons.concat(personObject));setNotification({message:\"Added \".concat(newName),isSuccess:true});}).catch(function(error){console.log(error.response.data);setNotification({message:error.response.data.error,isSuccess:false});});setTimeout(function(){return setNotification({message:null,isSuccess:false});},3000);// const filterPerson = persons.filter(person => person.name === newName)\n// if (filterPerson.length === 0){\n//\n// }\n// else\n//     if(window.confirm(`${newName} is already added to phonebook, replace a old number with a new one?`)) {\n//         const changedPerson = {...filterPerson[0], number: newNumber}\n//         console.log('changedPerson', changedPerson)\n//         personService\n//             .update(changedPerson.id, changedPerson)\n//             .then(returnedPerson => {\n//                 setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n//                 setNotification({\n//                     message: `Updated ${newName}`,\n//                     isSuccess: true\n//                 })\n//             })\n//             .catch(error => {\n//                 setNotification({\n//                     message: `Information of ${newName} has already been removed from server`,\n//                     isSuccess: false\n//                 })\n//                 setPersons(persons.filter(person => person.name !== newName))\n//                 console.log(error)\n//             })\n//         setTimeout(() => setNotification({\n//             message: null,\n//             isSuccess: false\n//         }), 3000)\n//     }\nsetNewName('');setNewPhone('');};var deletePerson=function deletePerson(person){console.log(person.name);if(window.confirm(\"Do you really want to delete \".concat(person.name)))personService.remove(person.id).then(function(result){setPersons(persons.filter(function(p){return p.id!==person.id;}));setNotification({message:\"Removed \".concat(person.name),isSuccess:true});});};var handlePersonChange=function handlePersonChange(event){setNewName(event.target.value);};var handlePhoneChange=function handlePhoneChange(event){setNewPhone(event.target.value);};var handleSearchName=function handleSearchName(event){setSearchName(event.target.value);};var searchPersons=searchName===''?persons:persons.filter(function(person){return person.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase());});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Notification,{message:notification.message,isSuccess:notification.isSuccess}),/*#__PURE__*/_jsx(\"h2\",{children:\"Search phone number by name (insensitive)\"}),/*#__PURE__*/_jsx(Filter,{searchName:searchName,handleSearchName:handleSearchName}),/*#__PURE__*/_jsx(\"h2\",{children:\"Phonebook\"}),/*#__PURE__*/_jsx(PersonForm,{addPerson:addPerson,newName:newName,newNumber:newNumber,handlePersonChange:handlePersonChange,handlePhoneChange:handlePhoneChange}),/*#__PURE__*/_jsx(\"h2\",{children:\"Numbers\"}),/*#__PURE__*/_jsx(Persons,{searchPersons:searchPersons,deletePerson:deletePerson})]});};export default App;","map":{"version":3,"sources":["/Users/lap13366-local/Documents/self-learning/FullStackOpen2020/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","personService","Persons","Filter","PersonForm","Notification","App","persons","setPersons","newName","setNewName","newNumber","setNewPhone","searchName","setSearchName","message","isSuccess","notification","setNotification","getAll","then","addPerson","event","preventDefault","personObject","name","number","console","log","create","concat","catch","error","response","data","setTimeout","deletePerson","person","window","confirm","remove","id","result","filter","p","handlePersonChange","target","value","handlePhoneChange","handleSearchName","searchPersons","toLocaleLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport './index.css'\nimport personService from './services/person'\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\"\nimport Notification from \"./components/Notification\"\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewPhone ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n  const [notification, setNotification] = useState({message: null, isSuccess: false})\n\n  useEffect(() =>{\n      personService\n          .getAll()\n          .then(persons => setPersons(persons))\n  }, [])\n\n  const addPerson = (event) => {\n      event.preventDefault()\n      const personObject = {\n              name: newName,\n              number: newNumber\n          }\n          console.log(personObject)\n          personService\n              .create(personObject)\n              .then(personObject => {\n                  setPersons(persons.concat(personObject))\n                  setNotification({\n                      message: `Added ${newName}`,\n                      isSuccess: true})\n                  }\n              ).catch(error => {\n                  console.log(error.response.data)\n                  setNotification({\n                      message: error.response.data.error,\n                      isSuccess: false\n                  })\n          })\n          setTimeout(() => setNotification({\n              message: null,\n              isSuccess: false\n          }), 3000)\n      // const filterPerson = persons.filter(person => person.name === newName)\n      // if (filterPerson.length === 0){\n      //\n      // }\n      // else\n      //     if(window.confirm(`${newName} is already added to phonebook, replace a old number with a new one?`)) {\n      //         const changedPerson = {...filterPerson[0], number: newNumber}\n      //         console.log('changedPerson', changedPerson)\n      //         personService\n      //             .update(changedPerson.id, changedPerson)\n      //             .then(returnedPerson => {\n      //                 setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n      //                 setNotification({\n      //                     message: `Updated ${newName}`,\n      //                     isSuccess: true\n      //                 })\n      //             })\n      //             .catch(error => {\n      //                 setNotification({\n      //                     message: `Information of ${newName} has already been removed from server`,\n      //                     isSuccess: false\n      //                 })\n      //                 setPersons(persons.filter(person => person.name !== newName))\n      //                 console.log(error)\n      //             })\n      //         setTimeout(() => setNotification({\n      //             message: null,\n      //             isSuccess: false\n      //         }), 3000)\n      //     }\n      setNewName('')\n      setNewPhone('')\n    }\n\n  const deletePerson = (person) => {\n        console.log(person.name)\n        if (window.confirm(`Do you really want to delete ${person.name}`))\n            personService\n                .remove(person.id)\n                .then((result) => {\n                    setPersons(persons.filter(p => p.id !== person.id))\n                    setNotification({\n                         message: `Removed ${person.name}`,\n                         isSuccess: true\n                     })\n                })\n    }\n\n  const handlePersonChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n      setNewPhone(event.target.value)\n  }\n\n  const handleSearchName = (event) => {\n      setSearchName(event.target.value)\n  }\n\n  const searchPersons = searchName === ''\n      ? persons\n      : persons.filter(person => person.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase()))\n\n  return (\n    <div>\n      <Notification message={notification.message} isSuccess={notification.isSuccess}/>\n      <h2>Search phone number by name (insensitive)</h2>\n      <Filter searchName={searchName} handleSearchName={handleSearchName}/>\n      <h2>Phonebook</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handlePersonChange={handlePersonChange} handlePhoneChange={handlePhoneChange}/>\n      <h2>Numbers</h2>\n      <Persons searchPersons={searchPersons} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}